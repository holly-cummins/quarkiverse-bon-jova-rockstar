package org.example.bon.jova.quarkus.extension.deployment.rockscore;

import org.junit.jupiter.api.Test;

import java.nio.file.Path;
import java.util.Map;

import static java.util.Map.entry;
import static org.junit.jupiter.api.Assertions.assertEquals;

class WordCounterTest {
    @Test
    void testCountWords() {
        var expectedWordCounts = Map.ofEntries(
                entry("play", 1),
                entry("nobodys", 1),
                entry("been", 1),
                entry("sack", 2),
                entry("thought", 1),
                entry("about", 1),
                entry("yeah", 9),
                entry("your", 1),
                entry("theyve", 1),
                entry("when", 1),
                entry("number", 1),
                entry("bang", 1),
                entry("hate", 1),
                entry("catch", 1),
                entry("they", 2),
                entry("abusing", 1),
                entry("reminds", 2),
                entry("gang", 1),
                entry("lives", 1),
                entry("pass", 1),
                entry("want", 1),
                entry("them", 1),
                entry("then", 1),
                entry("pack", 1),
                entry("push", 1),
                entry("looking", 1),
                entry("thats", 1),
                entry("love", 5),
                entry("hang", 1),
                entry("probably", 1),
                entry("another", 1),
                entry("bright", 1),
                entry("eyes", 3),
                entry("long", 2),
                entry("into", 1),
                entry("whoa", 5),
                entry("bluest", 1),
                entry("memories", 1),
                entry("where", 17),
                entry("place", 2),
                entry("power", 1),
                entry("takes", 1),
                entry("everything", 1),
                entry("mine", 9),
                entry("childhood", 1),
                entry("break", 1),
                entry("gonna", 1),
                entry("black", 9),
                entry("cadillac", 1),
                entry("hide", 1),
                entry("face", 1),
                entry("cats", 1),
                entry("blue", 1),
                entry("sweet", 11),
                entry("hanging", 1),
                entry("nine", 1),
                entry("luck", 1),
                entry("thunder", 1),
                entry("down", 1),
                entry("pray", 1),
                entry("smile", 1),
                entry("that", 2),
                entry("high", 1),
                entry("from", 1),
                entry("those", 1),
                entry("rain", 2),
                entry("making", 1),
                entry("beatin", 1),
                entry("look", 2),
                entry("take", 1),
                entry("never", 1),
                entry("warm", 1),
                entry("forget", 1),
                entry("safe", 1),
                entry("loose", 1),
                entry("stared", 1),
                entry("seems", 1),
                entry("dont", 1),
                entry("child", 8),
                entry("away", 1),
                entry("cause", 5),
                entry("back", 42),
                entry("flack", 1),
                entry("running", 1),
                entry("getting", 1),
                entry("hair", 1),
                entry("track", 1),
                entry("bullet", 1),
                entry("every", 1),
                entry("just", 3),
                entry("pain", 1),
                entry("noose", 1),
                entry("kept", 1),
                entry("special", 1),
                entry("with", 2),
                entry("hearse", 1),
                entry("shes", 2),
                entry("glad", 1),
                entry("ounce", 1),
                entry("skies", 1),
                entry("well", 12),
                entry("fresh", 1),
                entry("wild", 1),
                entry("quietly", 1));

        var inputFilesDirectory = Path.of("src/test/resources/rockscore/lyrics");

        var actualWordCounts = WordCounter.countWords(inputFilesDirectory);
        assertEquals(expectedWordCounts, actualWordCounts);
    }
}